/* Description: Parser for tokens generated by lexer.yy
 */

%{
#include <stdio.h>

int groups = 0;
int hosts = 0;

extern int yylex();
int yyerror(const char *s);
%}

%token HOSTS 
%token CHILDREN
%token ANUM
%token NUM
%token DELIM
%token HOSTNAME
%token IPADDR

%%

inventory: host_list	{ printf("Inventory\n"); }
				 | group_list { printf("Inventory\n"); }   	
				 ;

group_list: group	{ printf("GL\n"); }
					| group_list group { printf("GL\n"); }
					| group_list host_list
					;

group: ANUM DELIM	{ groups++; printf("group\n"); }

host_list: HOSTS DELIM host { printf("HL\n"); }
				 | host_list host { printf("HL\n"); }
         | host_list group_list
			   ;

host: HOSTNAME { hosts++; printf("Host\n"); }
		| HOSTNAME DELIM { hosts++; }
		| IPADDR   { hosts++; printf("IP\n"); }
    | IPADDR DELIM { hosts++; }
    ;

%%

int yyerror(const char *s)
{
  return 0; 
}

int main(){
	yyparse();
	printf("Total number of groups: %d\n", groups);
	printf("Total number of hosts: %d\n", hosts);

	return 0;
}
